#BlueJ class context
comment0.target=Button
comment0.text=\n\ An\ implementation\ of\ a\ generic\ button\ for\ a\ game\ or\ application.\ The\ button\n\ \ is\ displayed\ using\ either\ supplied\ images\ or\ images\ generated\ automatically\n\ from\ text.\n\ <p>\n\ <code>Button</code>\ objects\ have\ two\ ways\ to\ respond\ to\ button\ clicks\:\n\ <ol>\n\ <li>Poll\ the\ state\ of\ a\ button\ using\ <code>isPressed()</code>.</li>\n\ <li>Using\ the\ <code>ActionListener</code>\ interface.</li>\n\ </ol>\n\n\ The\ <code>ActionListener</code>\ interface\ is\ like\ the\n\ <code>ActionListener</code>\ interface\ in\ Java\ Swing.\ Scenarios\ using\ the\n\ <code>ActionListener</code>\ callback\ must\ include\ the\n\ <code>ActionListener</code>\ interface,\ and\ the\ class\ listening\ for\ button\n\ clicks\ must\ implement\ that\ interface.\ In\ addition,\ the\ implementing\ class\n\ must\ add\ itself\ to\ the\ callback\ list\ by\ calling\ the\n\ <code>addActionListener()</code>\ method.\ Then\ when\ a\ button\ of\ this\ class\n\ is\ clicked,\ the\ <code>actionPerformed()</code>\ method\ in\ the\ listening\ class\n\ will\ be\ called.\n\ <p>\n\ Note\ that\ you\ can\ make\ buttons\ with\ transparent\ backgrounds\ by\ using\n\ transparent\ background\ images\ or\ by\ setting\ the\ background\ to\ a\ transparent\n\ color.\ For\ example\:\n\ <pre>button.setBackground(new\ Color(0,\ 0,\ 0,\ 0));</pre>\n\n\ @author\ Edward\ Parrish\n\ @version\ 1.1\ \ 12/25/2010\n
comment1.params=
comment1.target=Button()
comment1.text=\n\ \ Creates\ a\ button\ with\ no\ set\ text\ or\ image.\n
comment10.params=bgDownColor
comment10.target=void\ setBackgroundPressed(java.awt.Color)
comment10.text=\n\ Set\ the\ background\ color\ of\ this\ button\ when\ down\ (pressed).\n\n\ @param\ bgDownColor\ The\ desired\ background\ color\ when\ pressed.\n
comment11.params=bgHoverColor
comment11.target=void\ setBackgroundHover(java.awt.Color)
comment11.text=\n\ Set\ the\ background\ color\ of\ this\ button\ on\ hover\ (mouseover).\n\n\ @param\ bgHoverColor\ The\ desired\ background\ color\ on\ hover.\n
comment12.params=g
comment12.target=void\ paintComponent(java.awt.Graphics)
comment12.text=\n\ Prepares\ the\ button's\ background\ images.\n\n\ If\ the\ images\ are\ supplied\ by\ the\ user,\ then\ copies\ those\ images\ onto\n\ the\ background.\ Otherwise,\ fills\ the\ background\ images\ with\ their\n\ respective\ colors.\n\n\ @param\ g\ The\ <code>Graphics</code>\ context\ in\ which\ to\ paint.\n
comment13.params=img\ bgColor\ imgWidth\ imgHeight
comment13.target=greenfoot.GreenfootImage\ prepareImage(greenfoot.GreenfootImage,\ java.awt.Color,\ int,\ int)
comment13.text=\n\ Helper\ method\ to\ prepare\ images\ for\ writing\ text.\n\n\ @param\ img\ The\ image\ to\ prepare.\n\ @param\ bgColor\ The\ background\ color\ with\ which\ to\ fill\ the\ image.\n\ @param\ imgWidth\ The\ width\ of\ the\ image\ to\ create\ or\ rework.\n\ @param\ imgHeight\ The\ height\ of\ the\ image\ to\ create\ or\ rework.\n\ @return\ The\ prepared\ image.\n
comment14.params=g
comment14.target=void\ paintBorder(java.awt.Graphics)
comment14.text=\n\ Paints\ this\ component's\ border,\ if\ it\ has\ one.\n\n\ @param\ g\ \ the\ <code>Graphics</code>\ context\ in\ which\ to\ paint.\n
comment15.params=g
comment15.target=void\ paintText(java.awt.Graphics)
comment15.text=\n\ Paints\ the\ text\ onto\ the\ buttons\ background\ image.\n\n\ @param\ g\ The\ <code>Graphics</code>\ context\ in\ which\ to\ paint.\n
comment16.params=img\ lines\ offset
comment16.target=void\ printText(greenfoot.GreenfootImage,\ java.lang.String[],\ int)
comment16.text=\n\ Helper\ method\ to\ print\ text\ onto\ the\ background\ image.\n\n\ @param\ img\ The\ image\ to\ write\ onto.\n\ @param\ lines\ The\ lines\ of\ text\ to\ write.\n\ @param\ offset\ The\ offset\ to\ the\ baseline\ (used\ for\ pressed\ effect).\n
comment2.params=labelText
comment2.target=Button(java.lang.String)
comment2.text=\n\ Creates\ a\ button\ with\ the\ specified\ text.\n\n\ @param\ labelText\ The\ text\ displayed\ on\ the\ button.\n
comment3.params=text\ idNumber
comment3.target=Button(java.lang.String,\ int)
comment3.text=\n\ Creates\ a\ button\ with\ the\ specified\ text\ and\ identifier\ number.\n\n\ @param\ text\ The\ text\ displayed\ on\ the\ button.\n\ @param\ idNumber\ An\ identifier\ number.\n
comment4.params=text\ font\ textColor
comment4.target=Button(java.lang.String,\ java.awt.Font,\ java.awt.Color)
comment4.text=\n\ Creates\ a\ button\ with\ the\ specified\ text\ and\ identifier\ number.\n\n\ @param\ text\ The\ text\ displayed\ on\ the\ button.\n\ @param\ font\ The\ font\ used\ to\ write\ on\ this\ component.\n\ @param\ textColor\ The\ color\ to\ use\ for\ displaying\ text.\n
comment5.params=text\ font\ textColor\ bgColor
comment5.target=Button(java.lang.String,\ java.awt.Font,\ java.awt.Color,\ java.awt.Color)
comment5.text=\n\ Creates\ a\ button\ with\ the\ specified\ text\ and\ identifier\ number.\n\n\ @param\ text\ The\ text\ displayed\ on\ the\ button.\n\ @param\ font\ The\ font\ used\ to\ write\ on\ this\ component.\n\ @param\ textColor\ The\ color\ to\ use\ for\ displaying\ text.\n\ @param\ bgColor\ The\ desired\ background\ color.\n
comment6.params=normalBG\ pressedBG\ hoverBG
comment6.target=Button(greenfoot.GreenfootImage,\ greenfoot.GreenfootImage,\ greenfoot.GreenfootImage)
comment6.text=\n\ Creates\ a\ button\ using\ the\ specified\ images.\ The\ images\ may\ be\n\ written\ on\ with\ <code>setText()</code>.\n\n\ @param\ normalBG\ The\ image\ displayed\ when\ the\ button\ is\ up\ (normal).\n\ @param\ pressedBG\ The\ image\ displayed\ when\ the\ button\ is\ down\ (pressed).\n\ @param\ hoverBG\ The\ image\ displayed\ when\ the\ mouse\ is\ hovering\ over\ the\n\ button.\n\ @throws\ IllegalArgumentException\ when\ an\ image\ is\ null.\n
comment7.params=
comment7.target=void\ act()
comment7.text=\n\ React\ to\ the\ mouse\ including\ rollovers\ and\ button\ clicks.\n
comment8.params=
comment8.target=boolean\ isPressed()
comment8.text=\n\ Returns\ true\ if\ this\ button\ is\ currently\ down\ (pressed),\ otherwise\n\ returns\ false.\n\n\ @return\ <code>true</code>\ if\ this\ button\ is\ currently\ pressed,\ otherwise\n\ <code>false</code>.\n
comment9.params=d
comment9.target=void\ setSize(java.awt.Dimension)
comment9.text=\n\ Resizes\ this\ button\ so\ that\ it\ has\ width\ <code>d.width</code>\n\ and\ height\ <code>d.height</code>.\n\n\ @param\ d\ The\ dimension\ specifying\ the\ new\ size.\n
numComments=17
