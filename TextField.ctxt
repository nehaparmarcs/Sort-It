#BlueJ class context
comment0.target=TextField
comment0.text=\n\ Class\ <code>TextField</code>\ is\ a\ Greenfoot\ component\ that\ allows\ the\ user\n\ to\ enter\ a\ single\ line\ of\ text.\n\n\ When\ users\ are\ finished\ entering\ text,\ they\ can\ signal\ they\ are\ finished\ by\n\ pressing\ the\ Enter\ key.\ Pressing\ the\ Enter\ key\ will\ fire\ the\ ActionListener\n\ interface.\n\n\ The\ <code>ActionListener</code>\ interface\ is\ like\ the\n\ <code>ActionListener</code>\ interface\ in\ Java\ Swing.\ Scenarios\ using\ the\n\ <code>ActionListener</code>\ callback\ must\ include\ the\n\ <code>ActionListener</code>\ interface,\ and\ the\ class\ listening\ for\ button\n\ clicks\ must\ implement\ that\ interface.\ In\ addition,\ the\ implementing\ class\n\ must\ add\ itself\ to\ the\ callback\ list\ by\ calling\ the\n\ <code>addActionListener()</code>\ method.\ Then\ when\ the\ Enter\ key\ is\ pressed,\n\ the\ <code>actionPerformed()</code>\ method\ in\ the\ listening\ class\ will\ be\n\ called.\n\n\ The\ developer\ can\ read\ the\ text\ the\ user\ entered\ by\ calling\ the\n\ <code>getText()</code>\ method.\n\n\ @author\ Ed\ Parrish\n\ @version\ 1.0\ \ 12/28/2010\n\ @see\ http\://java.sun.com/developer/onlineTraining/Media/2DText/index.html\n
comment1.params=
comment1.target=TextField()
comment1.text=\n\ Constructs\ a\ text\ field\ with\ not\ text\ and\ with\ a\ width\ of\ one\ column.\n
comment10.params=columns
comment10.target=void\ setColumns(int)
comment10.text=\n\ Sets\ the\ number\ of\ columns\ in\ this\ <code>TextField</code>.\n\n\ @param\ columns\ the\ number\ of\ columns\ >\=\ 0\n\ @exception\ IllegalArgumentException\ if\ <code>columns</code>\n\ \ \ \ \ \ is\ less\ than\ 0\n
comment11.params=
comment11.target=int\ getColumns()
comment11.text=\n\ Returns\ the\ number\ of\ columns\ in\ this\ <code>TextField</code>.\n\n\ @return\ the\ number\ of\ columns\ >\=\ 0.\n
comment12.params=
comment12.target=void\ repaint()
comment12.text=\n\ Paints\ the\ component\ image,\ including\ the\ background,\ border\ and\ text.\n\n\ This\ method\ recreates\ the\ text\ layout.\ To\ repaint\ without\ recreating\n\ the\ text\ layout,\ call\ <code>super.repaint()</code>.\n
comment13.params=g
comment13.target=void\ paintComponent(java.awt.Graphics)
comment13.text=\n\ Paints\ the\ text\ field's\ background\ image.\n\n\ @param\ g\ The\ <code>Graphics</code>\ context\ in\ which\ to\ paint.\n
comment14.params=g
comment14.target=void\ paintText(java.awt.Graphics)
comment14.text=\n\ Paints\ the\ text\ onto\ the\ labels\ background\ image.\n\n\ @param\ g\ The\ <code>Graphics</code>\ context\ in\ which\ to\ paint.\n
comment15.params=
comment15.target=void\ scrollToVisible()
comment15.text=\n\ Scrolls\ the\ field\ left\ or\ right\ until\ it\ is\ visible.\n
comment16.params=g
comment16.target=java.awt.font.TextLayout\ getTextLayout(java.awt.Graphics)
comment16.text=\n\ Returns\ a\ text\ layout\ for\ the\ text\ that\ the\ user\ has\ entered.\ The\ text\n\ layout\ is\ cached\ until\ <code>invalidateTextLayout</code>\ is\ called.\n\n\ @param\ g\ \ the\ <code>Graphics</code>\ context\ in\ which\ to\ paint.\n\ @return\ a\ <code>TextLayout</code>\ for\ the\ text\ that\ the\ user\ has\n\ \ \ \ \ \ \ \ \ entered,\ or\ <code>null</code>\ if\ no\ text\ has\ been\ entered.\n
comment17.params=mouseX\ mouseY
comment17.target=int\ getHitPosition(int,\ int)
comment17.text=\n\ Computes\ the\ character\ position\ of\ the\ mouse\ cursor.\n\n\ @param\ mouseX\ The\ x-coordinate\ of\ the\ mouse\ pointer.\n\ @param\ mouseY\ The\ y-coordinate\ of\ the\ mouse\ pointer.\n\ @return\ The\ character\ position\ of\ the\ mouse\ cursor.\n
comment18.params=
comment18.target=void\ deleteHighlighedChars()
comment18.text=\n\ Deletes\ the\ characters\ within\ the\ highlighted\ area.\n
comment2.params=text
comment2.target=TextField(java.lang.String)
comment2.text=\n\ Constructs\ a\ text\ field\ with\ the\ initial\ text\ displayed\ in\ the\ default\n\ text\ color\ and\ font\ and\ with\ a\ width\ of\ one\ column.\n\n\ @param\ text\ The\ initial\ text\ to\ display\ on\ the\ text\ field.\n
comment3.params=columns
comment3.target=TextField(int)
comment3.text=\n\ Constructs\ a\ text\ field\ with\ the\ initial\ text\ displayed\ in\ the\ default\n\ text\ color\ and\ font.\n\n\ @param\ columns\ Number\ of\ columns\ to\ calculate\ the\ preferred\ width.\n
comment4.params=text\ columns
comment4.target=TextField(java.lang.String,\ int)
comment4.text=\n\ Constructs\ a\ text\ field\ with\ the\ initial\ text\ displayed\ in\ the\ default\n\ text\ color\ and\ font.\n\n\ @param\ text\ The\ initial\ text\ to\ display\ on\ the\ text\ field.\n\ @param\ columns\ Number\ of\ columns\ to\ calculate\ the\ preferred\ width.\n
comment5.params=text\ columns\ font
comment5.target=TextField(java.lang.String,\ int,\ java.awt.Font)
comment5.text=\n\ Constructs\ a\ text\ field\ with\ the\ initial\ text\ displayed\ in\ the\ default\n\ text\ color\ and\ font.\n\n\ @param\ text\ The\ initial\ text\ to\ display\ on\ the\ text\ field.\n\ @param\ columns\ Number\ of\ columns\ to\ calculate\ the\ preferred\ width.\n\ @param\ font\ The\ font\ used\ to\ write\ on\ this\ component.\n
comment6.params=text\ columns\ font\ fg\ bg
comment6.target=TextField(java.lang.String,\ int,\ java.awt.Font,\ java.awt.Color,\ java.awt.Color)
comment6.text=\n\ Constructs\ a\ text\ field\ with\ the\ initial\ text\ displayed\ in\ the\ specified\n\ font\ and\ text\ color\ on\ the\ specified\ background\ color.\n\n\ @param\ text\ The\ initial\ text\ to\ display\ on\ the\ text\ field.\n\ @param\ columns\ Number\ of\ columns\ to\ calculate\ the\ preferred\ width.\n\ @param\ font\ The\ font\ used\ to\ write\ on\ this\ component.\n\ @param\ fg\ The\ desired\ foreground\ color.\n\ @param\ bg\ The\ desired\ background\ color.\n
comment7.params=
comment7.target=void\ act()
comment7.text=\n\ Handle\ keystrokes\ and\ mouse\ actions\ for\ this\ component.\n
comment8.params=newText
comment8.target=void\ setText(java.lang.String)
comment8.text=\n\ Set\ the\ text\ to\ be\ displayed.\n\n\ @param\ newText\ The\ new\ text\ to\ be\ displayed\ on\ the\ button.\n
comment9.params=
comment9.target=java.lang.String\ getText()
comment9.text=\n\ Returns\ the\ text\ for\ this\ component.\n\n\ @return\ The\ text\ displayed\ on\ this\ component.\n
numComments=19
